module Ballerina.DSL.Codegen.Python.Tests.Header

open NUnit.Framework
open Ballerina.Core.StringBuilder
open Ballerina.DSL.Codegen.Python.LanguageConstructs.Model

[<Test>]
let ``Test should create header with sorted imports`` () =
  let imports: Set<Import> =
    [ { Source = "x"; Target = "y" }
      { Source = "dataclasses"
        Target = "dataclass" }
      { Source = "collections.abc"
        Target = "Sequence" } ]
    |> Set.ofList

  let actual =
    Ballerina.DSL.Codegen.Python.LanguageConstructs.Header.Generate imports
    |> StringBuilder.ToString

  let expected =
    """# Code generated by ballerina, DO NOT EDIT.

from __future__ import annotations
from collections.abc import Sequence
from dataclasses import dataclass
from x import y

"""

  Assert.That(actual, Is.EqualTo expected)

[<Test>]
let ``Test should create header with grouped imports with sorted targets`` () =
  let imports =
    [ { Source = "collections.abc"
        Target = "x" }
      { Source = "collections.abc"
        Target = "Sequence" }
      { Source = "collections.abc"
        Target = "Mapping" } ]
    |> Set.ofList

  let actual =
    Ballerina.DSL.Codegen.Python.LanguageConstructs.Header.Generate imports
    |> StringBuilder.ToString

  let expected =
    """# Code generated by ballerina, DO NOT EDIT.

from __future__ import annotations
from collections.abc import Mapping, Sequence, x

"""

  Assert.That(actual, Is.EqualTo expected)
