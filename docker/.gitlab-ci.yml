variables:
  DOCKER_DRIVER: overlay2
  IMAGE_NAME: zovio_zovio/website
  JOBS_IMAGE_NAME: zovio_zovio/jobs
  WP_IMAGE_NAME: zovio_zovio/wp
  DRUPAL_IMAGE_NAME: zovio_zovio/drupal
  GITHUB_TOKEN: 0bd501e75541243f7b3cd5ad5a6c59fcf9eac839
  ACF_PRO_KEY: b3JkZXJfaWQ9MzczNTJ8dHlwZT1kZXZlbG9wZXJ8ZGF0ZT0yMDE0LTA4LTE0IDA5OjQwOjA4

image: docker:latest
services:
- docker:19.03.12-dind

stages:
- build
- deploy
- migration


.ssh_tunnel: &ssh_tunnel
  - cat $GD_DEPLOY_KEY > ~/.ssh/id_rsa && chmod 400 ~/.ssh/id_rsa
  - ssh -4fNL 2375:localhost:2375 -J hoppinger@$GD_BASTION_SERVER hoppinger@$DOCKER_NODE

build docker image:
  stage: build
  only:
  - testing
  - acceptance
  - master
  script:
  - export TAG=$(date "+%Y%m%d%H%M-$CI_COMMIT_BRANCH-$CI_COMMIT_SHORT_SHA")
  - echo "BUILD_TAG=$TAG" >> build.env
  - docker build . --file Docker/Dockerfile.production --tag registry.verona.hoppinger.com/$IMAGE_NAME:$TAG
  - docker build . --file Docker/Dockerfile.BackgroundJobs.production --tag registry.verona.hoppinger.com/$JOBS_IMAGE_NAME:$TAG
#  - docker build . --file Docker/Dockerfile.WP --tag registry.verona.hoppinger.com/$WP_IMAGE_NAME:$TAG
#    --build-arg GITHUB_TOKEN=$GITHUB_TOKEN --build-arg ACF_PRO_KEY=$ACF_PRO_KEY
#  - docker build . --file Docker/Dockerfile.Drupal --tag registry.verona.hoppinger.com/$DRUPAL_IMAGE_NAME:$TAG
  - docker login registry.verona.hoppinger.com -u $REGISTRY_USER -p $REGISTRY_PASS
  - docker push registry.verona.hoppinger.com/$IMAGE_NAME:$TAG
  - docker push registry.verona.hoppinger.com/$JOBS_IMAGE_NAME:$TAG
#  - docker push registry.verona.hoppinger.com/$WP_IMAGE_NAME:$TAG
#  - docker push registry.verona.hoppinger.com/$DRUPAL_IMAGE_NAME:$TAG
  artifacts:
    reports:
      dotenv: build.env

.deploy:
  needs:
  - job: build docker image
    artifacts: true
  variables:
    DOCKER_HOST: "tcp://localhost:2375"
    DOCKER_NODE: ""
    DEPLOY_JOBS: "true"
    PORT: ''
    CONTAINER_NAME: ''
    DATA_DIRECTORY: ''
    TAG: $BUILD_TAG
    ENVIRONMENT: $CI_ENVIRONMENT_NAME
  stage: deploy
  image: registry.verona.hoppinger.com/public/new-docker-compose:latest
  before_script:
    - *ssh_tunnel
  script:
  - /usr/local/bin/run_jsonnet_with_env docker-compose.jsonnet > docker-compose.json
  - docker login registry.verona.hoppinger.com -u $REGISTRY_USER -p $REGISTRY_PASS
  - docker compose -f docker-compose.json up -d --quiet-pull --force-recreate
  - echo "CONTAINER_NAME=$CONTAINER_NAME" >> deploy.env
  - echo "DOCKER_HOST=$DOCKER_HOST" >> deploy.env
  - echo "DOCKER_NODE=$DOCKER_NODE" >> deploy.env
  artifacts:
    reports:
      dotenv: deploy.env
    paths:
    - docker-compose.json
    expire_in: 1 hour

deploy testing:
  extends: .deploy
  only:
    - testing
  environment:
    name: testing
    url: https://zovio-zovio-website.test.hoppinger.com
  variables:
    DOCKER_NODE: management1-gd-internal.verona.hoppinger.com
    PORT: '7694'
    CONTAINER_NAME: zovio_zovio_t01_website_1
    DATA_DIRECTORY: zovio_zovio_t01_website

deploy acceptance:
  extends: .deploy
  only:
    - acceptance
  environment:
    name: acceptance
    url: https://zovio-zovio-website.acceptatie.hoppinger.com
  variables:
    DOCKER_NODE: management1-gd-internal.verona.hoppinger.com
    PORT: '7695'
    CONTAINER_NAME: zovio_zovio_a01_website_1
    DATA_DIRECTORY: zovio_zovio_a01_website

deploy production 1/2:
  extends: .deploy
  only:
    - master
  environment:
    name: production
    url: https://zovio-zovio-website.productie.hoppinger.com
  variables:
    DOCKER_NODE: docker1-gd-internal.verona.hoppinger.com
    PORT: '7263'
    CONTAINER_NAME: zovio_zovio_p01_website_1
    DATA_DIRECTORY: zovio_zovio_p01_website

deploy production 2/2:
  extends: .deploy
  only:
    - master
  environment:
    name: production
    url: https://zovio-zovio-website.productie.hoppinger.com
  variables:
    DOCKER_NODE: docker2-gd-internal.verona.hoppinger.com
    PORT: '7264'
    CONTAINER_NAME: zovio_zovio_p01_website_2
    DATA_DIRECTORY: zovio_zovio_p01_website
    DEPLOY_JOBS: "false"

.migrate:
  stage: migration
  image: registry.verona.hoppinger.com/public/new-docker-compose:latest
  before_script:
    - *ssh_tunnel
  script:
    - export COMMAND="dotnet Zovio.dll migrate"
    - docker exec $CONTAINER_NAME $COMMAND
    - export COMMAND2="dotnet Zovio.dll es-update"
    - docker exec $CONTAINER_NAME $COMMAND2

migrate testing:
 extends: .migrate
 only:
   - testing

migrate acceptance:
 extends: .migrate
 only:
   - acceptance

migrate production:
 extends: .migrate
 only:
   - master
 when: manual

