name: CI
on:
  push:
    branches:
      - "*"
    tags:
      - "*"
  pull_request:
jobs:
  frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v5.0.0
      - run: npx prettier . --check
      - run: yarn
      - run: yarn compile-ballerina-core

  backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5.0.0
      - uses: actions/setup-dotnet@v5.0.0
      - run: dotnet tool restore
      - run: dotnet build backend
      - run: dotnet fantomas --check backend
      - run: dotnet test backend

  ballerina-go:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend/libraries/ballerina-core-go
    steps:
      - uses: actions/checkout@v5.0.0
      - uses: actions/setup-go@v6.0.0
        with:
          go-version-file: backend/libraries/ballerina-core-go/go.mod
      - name: Check formatting
        run: test -z "$(gofmt -l .)"
      - run: go test ./...
      - run: go build ./...
      - name: Check go.mod is up to date
        run: go mod tidy -diff

  ballerina-python:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend/libraries/ballerina-core-python
    steps:
      - uses: actions/checkout@v5.0.0
      - uses: actions/setup-python@v5.6.0
        with:
          python-version: "3.10"
      - run: |
          # https://python-poetry.org/docs/#ci-recommendations
          export POETRY_HOME=/opt/poetry
          python3 -m venv $POETRY_HOME
          $POETRY_HOME/bin/pip install poetry==2.1.2
          $POETRY_HOME/bin/poetry --version
          echo "$POETRY_HOME/bin/" >> $GITHUB_PATH
        shell: bash
      - run: poetry sync
      - run: poetry run ruff format --check
      - run: poetry run ruff check .
      - run: poetry run mypy
