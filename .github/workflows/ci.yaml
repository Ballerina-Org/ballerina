name: CI
on:
  push:
    branches:
      - main
    tags:
      - "*"
  pull_request:
jobs:
  frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v4.2.2
      # - run: npx prettier . --check
      - run: yarn
      - run: yarn compile-test
      - run: yarn compile-web
      - run: yarn compile-mobile
      - run: yarn compile-ballerina-core
      - run: yarn compile-create-domain
      - run: yarn compile-playground-core
  backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend/libraries/ballerina-core/
    steps:
      - uses: actions/checkout@v4.2.2
      - uses: actions/setup-dotnet@v4.3.0
      - run: |
          dotnet restore
          dotnet tool restore
      - run: dotnet build
      - run: dotnet fantomas --check .
      - run: dotnet test
  ballerina-go:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend/libraries/ballerina-core-go
    steps:
      - uses: actions/checkout@v4.2.2
      - uses: actions/setup-go@v5.4.0
        with:
          go-version-file: backend/libraries/ballerina-core-go/go.mod
      - name: Check formatting
        run: test -z "$(gofmt -l .)"
      - run: go test ./...
      - run: go build ./...
      - name: Check go.mod is up to date
        run: go mod tidy -diff
  publish-ballerina-core:
    # if: startsWith(github.ref, 'refs/tags/v')
    # needs:
    #   - frontend
    #   - backend
    #   - ballerina-go
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend/libraries/ballerina-core
    steps:
      - uses: actions/checkout@v4.2.2
      - uses: actions/setup-dotnet@v4.3.0
      - run: dotnet restore
      - name: Determine Package Version
        id: version
        run: |
          VERSION="0.0.0"
          echo "PACKAGE_VERSION=$VERSION" >> $GITHUB_OUTPUT
      # - name: Determine Package Version
      #   id: version
      #   run: |
      #     VERSION="${GITHUB_REF_NAME#v}"  # strip 'v' prefix
      #     echo "PACKAGE_VERSION=$VERSION" >> $GITHUB_OUTPUT
      - name: Pack NuGet package
        run: |
          dotnet pack --configuration Release \
            /p:PackageVersion=${{ steps.version.outputs.PACKAGE_VERSION }} \
            --output ./nupkg
      - name: Publish to NuGet.org
        run: |
          dotnet nuget push ./nupkg/*.nupkg \
            --api-key "${{ secrets.NUGET_API_KEY }}" \
            --source "https://api.nuget.org/v3/index.json" \
            --skip-duplicate
